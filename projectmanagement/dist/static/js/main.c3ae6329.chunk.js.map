{"version":3,"sources":["components/layouts/SignedInLinks.js","store/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","setState","handleChange","target","value","authError","action","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","error","SignUp","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3ae6329.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">Create Project</NavLink>\n      </li>\n      <li>\n        <a href=\"/\" onClick={props.signOut}>\n          Logout\n        </a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({\n          type: \"LOGIN_SUCCESS\"\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: \"LOGIN_ERROR\",\n          error: err\n        });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({\n          type: \"SIGNOUT_SUCCESS\"\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: \"SIGNOUT_ERROR\"\n        });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(res => {\n        return firestore\n          .collection(\"users\")\n          .doc(res.user.uid)\n          .set({\n            firstname: newUser.firstname,\n            lastname: newUser.lastname,\n            initials: newUser.firstname[0] + newUser.lastname[0]\n          });\n      })\n      .then(() => {\n        dispatch({\n          type: \"SIGNUP_SUCCESS\"\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: \"SIGNUP_ERROR\",\n          error: err\n        });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Sign In</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst NavBar = props => {\n  const { auth, profile } = props;\n  console.log(auth);\n\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Project Management Tool\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(NavBar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(notification => {\n                return (\n                  <li key={notification.id}>\n                    <span className=\"pink-text\">{notification.user}</span>\n                    <span> {notification.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(notification.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card grey z-depth-0 lighten-2\">\n      <div className=\"card-content\">\n        <span className=\"card-title\">{project.title}</span>\n      </div>\n      <div className=\"card-action grey lighten-4 grey-text\">\n        <div>\n          Posted by {project.authorFirstName} {project.authorLastName}\n        </div>\n        <div>Posted {moment(project.createdAt.toDate()).calendar()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"container section project-list\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project}></ProjectSummary>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  state = {};\n  render() {\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\n\n    return (\n      <div className=\"container dashboard\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects}></ProjectList>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}></Notifications>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n\n  if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>Posted {moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project..</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\"\n    }\n  ])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n    this.setState({\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <div className=\"container\">\n        <form action=\"\" onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: credentials => dispatch(signIn(credentials))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n    this.setState({\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  onComponentDidMount() {\n    console.log(\"component mounted\", this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <div className=\"container\">\n        <form action=\"\" onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstname\">Firstname</label>\n            <input\n              type=\"text\"\n              id=\"firstname\"\n              onChange={this.handleChange}\n              value={this.state.firstname}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastname\">Lastname</label>\n            <input\n              type=\"text\"\n              id=\"lastname\"\n              onChange={this.handleChange}\n              value={this.state.lastname}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n\n    console.log(getState());\n\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstname,\n        authorLastName: profile.lastname,\n        authorId: authorId,\n        createdAt: new Date()\n      })\n      .then(project => {\n        dispatch({\n          type: \"CREATE_PROJECT\",\n          project: project\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: \"CREATE_PROJECT_ERROR\",\n          error: error\n        });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  render() {\n    const { auth } = this.props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\n\n    return (\n      <div className=\"container\">\n        <form action=\"\" onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <input type=\"text\" id=\"content\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => {\n      dispatch(createProject(project));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/layouts/NavBar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\": {\n      return {\n        ...state,\n        authError: \"Login Failed\"\n      };\n    }\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        authError: null\n      };\n\n    case \"SIGNOUT_SUCCESS\":\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.error.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    {\n      id: \"1\",\n      title: \"Project one\",\n      content:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Sed voluptates veniam porro commodi amet ab nihil eius quia quam consequuntur perferendis, tempora et quos vitae impedit atque velit nisi. Magnam!\"\n    },\n    {\n      id: \"2\",\n      title: \"Project two\",\n      content:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Sed voluptates veniam porro commodi amet ab nihil eius quia quam consequuntur perferendis, tempora et quos vitae impedit atque velit nisi. Magnam!\"\n    },\n    {\n      id: \"3\",\n      title: \"Project three\",\n      content:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Sed voluptates veniam porro commodi amet ab nihil eius quia quam consequuntur perferendis, tempora et quos vitae impedit atque velit nisi. Magnam!\"\n    },\n    {\n      id: \"4\",\n      title: \"Project four\",\n      content:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Sed voluptates veniam porro commodi amet ab nihil eius quia quam consequuntur perferendis, tempora et quos vitae impedit atque velit nisi. Magnam!\"\n    },\n    {\n      id: \"5\",\n      title: \"Project five\",\n      content:\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Sed voluptates veniam porro commodi amet ab nihil eius quia quam consequuntur perferendis, tempora et quos vitae impedit atque velit nisi. Magnam!\"\n    }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\", action.error);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA6aQllHVXR5jK0YAonpdm6GXi3bJPJj_E\",\n  authDomain: \"project-management-c3fad.firebaseapp.com\",\n  databaseURL: \"https://project-management-c3fad.firebaseio.com\",\n  projectId: \"project-management-c3fad\",\n  storageBucket: \"\",\n  messagingSenderId: \"853083029935\",\n  appId: \"1:853083029935:web:ebe8c6a48ee5d02452af5a\",\n  measurementId: \"G-BRXQ1LEFEJ\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n//firebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        getFirebase,\n        getFirestore\n      })\n    ),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}